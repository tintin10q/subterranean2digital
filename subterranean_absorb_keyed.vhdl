-- generated by Digital. Don't modify this file!
-- Any changes will be lost if this file is regenerated.

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

-- x1 of chi
entity x is
  port (
    s: in std_logic_vector(2 downto 0);
    o: out std_logic);
end x;

architecture Behavioral of x is
begin
  o <= (s(0) XOR ((s(1) XOR '1') AND s(2)));
end Behavioral;

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

-- x64 of chi
entity x64_61 is
  port (
    i_64: in std_logic_vector(63 downto 0);
    o_64: out std_logic_vector(61 downto 0));
end x64_61;

architecture Behavioral of x64_61 is
  signal s0: std_logic_vector(2 downto 0);
  signal s1: std_logic_vector(2 downto 0);
  signal s2: std_logic_vector(2 downto 0);
  signal s3: std_logic_vector(2 downto 0);
  signal s4: std_logic_vector(2 downto 0);
  signal s5: std_logic_vector(2 downto 0);
  signal s6: std_logic_vector(2 downto 0);
  signal s7: std_logic_vector(2 downto 0);
  signal s8: std_logic_vector(2 downto 0);
  signal s9: std_logic_vector(2 downto 0);
  signal s10: std_logic_vector(2 downto 0);
  signal s11: std_logic_vector(2 downto 0);
  signal s12: std_logic_vector(2 downto 0);
  signal s13: std_logic_vector(2 downto 0);
  signal s14: std_logic_vector(2 downto 0);
  signal s15: std_logic_vector(2 downto 0);
  signal s16: std_logic_vector(2 downto 0);
  signal s17: std_logic_vector(2 downto 0);
  signal s18: std_logic_vector(2 downto 0);
  signal s19: std_logic_vector(2 downto 0);
  signal s20: std_logic_vector(2 downto 0);
  signal s21: std_logic_vector(2 downto 0);
  signal s22: std_logic_vector(2 downto 0);
  signal s23: std_logic_vector(2 downto 0);
  signal s24: std_logic_vector(2 downto 0);
  signal s25: std_logic_vector(2 downto 0);
  signal s26: std_logic_vector(2 downto 0);
  signal s27: std_logic_vector(2 downto 0);
  signal s28: std_logic_vector(2 downto 0);
  signal s29: std_logic_vector(2 downto 0);
  signal s30: std_logic_vector(2 downto 0);
  signal s31: std_logic_vector(2 downto 0);
  signal s32: std_logic_vector(2 downto 0);
  signal s33: std_logic_vector(2 downto 0);
  signal s34: std_logic_vector(2 downto 0);
  signal s35: std_logic_vector(2 downto 0);
  signal s36: std_logic_vector(2 downto 0);
  signal s37: std_logic_vector(2 downto 0);
  signal s38: std_logic_vector(2 downto 0);
  signal s39: std_logic_vector(2 downto 0);
  signal s40: std_logic_vector(2 downto 0);
  signal s41: std_logic_vector(2 downto 0);
  signal s42: std_logic_vector(2 downto 0);
  signal s43: std_logic_vector(2 downto 0);
  signal s44: std_logic_vector(2 downto 0);
  signal s45: std_logic_vector(2 downto 0);
  signal s46: std_logic_vector(2 downto 0);
  signal s47: std_logic_vector(2 downto 0);
  signal s48: std_logic_vector(2 downto 0);
  signal s49: std_logic_vector(2 downto 0);
  signal s50: std_logic_vector(2 downto 0);
  signal s51: std_logic_vector(2 downto 0);
  signal s52: std_logic_vector(2 downto 0);
  signal s53: std_logic_vector(2 downto 0);
  signal s54: std_logic_vector(2 downto 0);
  signal s55: std_logic_vector(2 downto 0);
  signal s56: std_logic_vector(2 downto 0);
  signal s57: std_logic_vector(2 downto 0);
  signal s58: std_logic_vector(2 downto 0);
  signal s59: std_logic_vector(2 downto 0);
  signal s60: std_logic_vector(2 downto 0);
  signal s61: std_logic_vector(2 downto 0);
  signal s62: std_logic;
  signal s63: std_logic;
  signal s64: std_logic;
  signal s65: std_logic;
  signal s66: std_logic;
  signal s67: std_logic;
  signal s68: std_logic;
  signal s69: std_logic;
  signal s70: std_logic;
  signal s71: std_logic;
  signal s72: std_logic;
  signal s73: std_logic;
  signal s74: std_logic;
  signal s75: std_logic;
  signal s76: std_logic;
  signal s77: std_logic;
  signal s78: std_logic;
  signal s79: std_logic;
  signal s80: std_logic;
  signal s81: std_logic;
  signal s82: std_logic;
  signal s83: std_logic;
  signal s84: std_logic;
  signal s85: std_logic;
  signal s86: std_logic;
  signal s87: std_logic;
  signal s88: std_logic;
  signal s89: std_logic;
  signal s90: std_logic;
  signal s91: std_logic;
  signal s92: std_logic;
  signal s93: std_logic;
  signal s94: std_logic;
  signal s95: std_logic;
  signal s96: std_logic;
  signal s97: std_logic;
  signal s98: std_logic;
  signal s99: std_logic;
  signal s100: std_logic;
  signal s101: std_logic;
  signal s102: std_logic;
  signal s103: std_logic;
  signal s104: std_logic;
  signal s105: std_logic;
  signal s106: std_logic;
  signal s107: std_logic;
  signal s108: std_logic;
  signal s109: std_logic;
  signal s110: std_logic;
  signal s111: std_logic;
  signal s112: std_logic;
  signal s113: std_logic;
  signal s114: std_logic;
  signal s115: std_logic;
  signal s116: std_logic;
  signal s117: std_logic;
  signal s118: std_logic;
  signal s119: std_logic;
  signal s120: std_logic;
  signal s121: std_logic;
  signal s122: std_logic;
  signal s123: std_logic;
begin
  s0 <= i_64(2 downto 0);
  s1 <= i_64(3 downto 1);
  s2 <= i_64(4 downto 2);
  s3 <= i_64(5 downto 3);
  s4 <= i_64(6 downto 4);
  s5 <= i_64(7 downto 5);
  s6 <= i_64(8 downto 6);
  s7 <= i_64(9 downto 7);
  s8 <= i_64(10 downto 8);
  s9 <= i_64(11 downto 9);
  s10 <= i_64(12 downto 10);
  s11 <= i_64(13 downto 11);
  s12 <= i_64(14 downto 12);
  s13 <= i_64(15 downto 13);
  s14 <= i_64(16 downto 14);
  s15 <= i_64(17 downto 15);
  s16 <= i_64(18 downto 16);
  s17 <= i_64(19 downto 17);
  s18 <= i_64(20 downto 18);
  s19 <= i_64(21 downto 19);
  s20 <= i_64(22 downto 20);
  s21 <= i_64(23 downto 21);
  s22 <= i_64(24 downto 22);
  s23 <= i_64(25 downto 23);
  s24 <= i_64(26 downto 24);
  s25 <= i_64(27 downto 25);
  s26 <= i_64(28 downto 26);
  s27 <= i_64(29 downto 27);
  s28 <= i_64(30 downto 28);
  s29 <= i_64(31 downto 29);
  s30 <= i_64(32 downto 30);
  s31 <= i_64(33 downto 31);
  s32 <= i_64(34 downto 32);
  s33 <= i_64(35 downto 33);
  s34 <= i_64(36 downto 34);
  s35 <= i_64(37 downto 35);
  s36 <= i_64(38 downto 36);
  s37 <= i_64(39 downto 37);
  s38 <= i_64(40 downto 38);
  s39 <= i_64(41 downto 39);
  s40 <= i_64(42 downto 40);
  s41 <= i_64(43 downto 41);
  s42 <= i_64(44 downto 42);
  s43 <= i_64(45 downto 43);
  s44 <= i_64(46 downto 44);
  s45 <= i_64(47 downto 45);
  s46 <= i_64(48 downto 46);
  s47 <= i_64(49 downto 47);
  s48 <= i_64(50 downto 48);
  s49 <= i_64(51 downto 49);
  s50 <= i_64(52 downto 50);
  s51 <= i_64(53 downto 51);
  s52 <= i_64(54 downto 52);
  s53 <= i_64(55 downto 53);
  s54 <= i_64(56 downto 54);
  s55 <= i_64(57 downto 55);
  s56 <= i_64(58 downto 56);
  s57 <= i_64(59 downto 57);
  s58 <= i_64(60 downto 58);
  s59 <= i_64(61 downto 59);
  s60 <= i_64(62 downto 60);
  s61 <= i_64(63 downto 61);
  gate0: entity work.x
    port map (
      s => s0,
      o => s62);
  gate1: entity work.x
    port map (
      s => s1,
      o => s63);
  gate2: entity work.x
    port map (
      s => s2,
      o => s64);
  gate3: entity work.x
    port map (
      s => s3,
      o => s65);
  gate4: entity work.x
    port map (
      s => s4,
      o => s66);
  gate5: entity work.x
    port map (
      s => s5,
      o => s67);
  gate6: entity work.x
    port map (
      s => s6,
      o => s68);
  gate7: entity work.x
    port map (
      s => s7,
      o => s69);
  gate8: entity work.x
    port map (
      s => s8,
      o => s70);
  gate9: entity work.x
    port map (
      s => s9,
      o => s71);
  gate10: entity work.x
    port map (
      s => s10,
      o => s72);
  gate11: entity work.x
    port map (
      s => s11,
      o => s73);
  gate12: entity work.x
    port map (
      s => s12,
      o => s74);
  gate13: entity work.x
    port map (
      s => s13,
      o => s75);
  gate14: entity work.x
    port map (
      s => s14,
      o => s76);
  gate15: entity work.x
    port map (
      s => s15,
      o => s77);
  gate16: entity work.x
    port map (
      s => s16,
      o => s78);
  gate17: entity work.x
    port map (
      s => s17,
      o => s79);
  gate18: entity work.x
    port map (
      s => s18,
      o => s80);
  gate19: entity work.x
    port map (
      s => s19,
      o => s81);
  gate20: entity work.x
    port map (
      s => s20,
      o => s82);
  gate21: entity work.x
    port map (
      s => s21,
      o => s83);
  gate22: entity work.x
    port map (
      s => s22,
      o => s84);
  gate23: entity work.x
    port map (
      s => s23,
      o => s85);
  gate24: entity work.x
    port map (
      s => s24,
      o => s86);
  gate25: entity work.x
    port map (
      s => s25,
      o => s87);
  gate26: entity work.x
    port map (
      s => s26,
      o => s88);
  gate27: entity work.x
    port map (
      s => s27,
      o => s89);
  gate28: entity work.x
    port map (
      s => s28,
      o => s90);
  gate29: entity work.x
    port map (
      s => s29,
      o => s91);
  gate30: entity work.x
    port map (
      s => s30,
      o => s92);
  gate31: entity work.x
    port map (
      s => s31,
      o => s93);
  gate32: entity work.x
    port map (
      s => s32,
      o => s94);
  gate33: entity work.x
    port map (
      s => s33,
      o => s95);
  gate34: entity work.x
    port map (
      s => s34,
      o => s96);
  gate35: entity work.x
    port map (
      s => s35,
      o => s97);
  gate36: entity work.x
    port map (
      s => s36,
      o => s98);
  gate37: entity work.x
    port map (
      s => s37,
      o => s99);
  gate38: entity work.x
    port map (
      s => s38,
      o => s100);
  gate39: entity work.x
    port map (
      s => s39,
      o => s101);
  gate40: entity work.x
    port map (
      s => s40,
      o => s102);
  gate41: entity work.x
    port map (
      s => s41,
      o => s103);
  gate42: entity work.x
    port map (
      s => s42,
      o => s104);
  gate43: entity work.x
    port map (
      s => s43,
      o => s105);
  gate44: entity work.x
    port map (
      s => s44,
      o => s106);
  gate45: entity work.x
    port map (
      s => s45,
      o => s107);
  gate46: entity work.x
    port map (
      s => s46,
      o => s108);
  gate47: entity work.x
    port map (
      s => s47,
      o => s109);
  gate48: entity work.x
    port map (
      s => s48,
      o => s110);
  gate49: entity work.x
    port map (
      s => s49,
      o => s111);
  gate50: entity work.x
    port map (
      s => s50,
      o => s112);
  gate51: entity work.x
    port map (
      s => s51,
      o => s113);
  gate52: entity work.x
    port map (
      s => s52,
      o => s114);
  gate53: entity work.x
    port map (
      s => s53,
      o => s115);
  gate54: entity work.x
    port map (
      s => s54,
      o => s116);
  gate55: entity work.x
    port map (
      s => s55,
      o => s117);
  gate56: entity work.x
    port map (
      s => s56,
      o => s118);
  gate57: entity work.x
    port map (
      s => s57,
      o => s119);
  gate58: entity work.x
    port map (
      s => s58,
      o => s120);
  gate59: entity work.x
    port map (
      s => s59,
      o => s121);
  gate60: entity work.x
    port map (
      s => s60,
      o => s122);
  gate61: entity work.x
    port map (
      s => s61,
      o => s123);
  o_64(0) <= s62;
  o_64(1) <= s63;
  o_64(2) <= s64;
  o_64(3) <= s65;
  o_64(4) <= s66;
  o_64(5) <= s67;
  o_64(6) <= s68;
  o_64(7) <= s69;
  o_64(8) <= s70;
  o_64(9) <= s71;
  o_64(10) <= s72;
  o_64(11) <= s73;
  o_64(12) <= s74;
  o_64(13) <= s75;
  o_64(14) <= s76;
  o_64(15) <= s77;
  o_64(16) <= s78;
  o_64(17) <= s79;
  o_64(18) <= s80;
  o_64(19) <= s81;
  o_64(20) <= s82;
  o_64(21) <= s83;
  o_64(22) <= s84;
  o_64(23) <= s85;
  o_64(24) <= s86;
  o_64(25) <= s87;
  o_64(26) <= s88;
  o_64(27) <= s89;
  o_64(28) <= s90;
  o_64(29) <= s91;
  o_64(30) <= s92;
  o_64(31) <= s93;
  o_64(32) <= s94;
  o_64(33) <= s95;
  o_64(34) <= s96;
  o_64(35) <= s97;
  o_64(36) <= s98;
  o_64(37) <= s99;
  o_64(38) <= s100;
  o_64(39) <= s101;
  o_64(40) <= s102;
  o_64(41) <= s103;
  o_64(42) <= s104;
  o_64(43) <= s105;
  o_64(44) <= s106;
  o_64(45) <= s107;
  o_64(46) <= s108;
  o_64(47) <= s109;
  o_64(48) <= s110;
  o_64(49) <= s111;
  o_64(50) <= s112;
  o_64(51) <= s113;
  o_64(52) <= s114;
  o_64(53) <= s115;
  o_64(54) <= s116;
  o_64(55) <= s117;
  o_64(56) <= s118;
  o_64(57) <= s119;
  o_64(58) <= s120;
  o_64(59) <= s121;
  o_64(60) <= s122;
  o_64(61) <= s123;
end Behavioral;

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

-- ? : s_i ? s_i + (s_i+1 + 1)s_i+2 ,
entity chi is
  port (
    n64_127: in std_logic_vector(63 downto 0);
    n128_191: in std_logic_vector(63 downto 0);
    n191_255: in std_logic_vector(63 downto 0);
    n0_63: in std_logic_vector(63 downto 0);
    n256: in std_logic;
    o0_63: out std_logic_vector(63 downto 0);
    o64_127: out std_logic_vector(63 downto 0);
    o128_191: out std_logic_vector(63 downto 0);
    o192_255: out std_logic_vector(63 downto 0);
    o256: out std_logic);
end chi;

architecture Behavioral of chi is
  signal s0: std_logic_vector(63 downto 0);
  signal s1: std_logic_vector(61 downto 0);
  signal s2: std_logic;
  signal s3: std_logic_vector(63 downto 0);
  signal s4: std_logic;
  signal s5: std_logic_vector(2 downto 0);
  signal s6: std_logic;
  signal s7: std_logic_vector(2 downto 0);
  signal s8: std_logic;
  signal s9: std_logic;
  signal s10: std_logic_vector(61 downto 0);
  signal s11: std_logic_vector(2 downto 0);
  signal s12: std_logic;
  signal s13: std_logic_vector(2 downto 0);
  signal s14: std_logic;
  signal s15: std_logic;
  signal s16: std_logic_vector(63 downto 0);
  signal s17: std_logic;
  signal s18: std_logic_vector(61 downto 0);
  signal s19: std_logic_vector(2 downto 0);
  signal s20: std_logic;
  signal s21: std_logic_vector(2 downto 0);
  signal s22: std_logic;
  signal s23: std_logic;
  signal s24: std_logic_vector(63 downto 0);
  signal s25: std_logic;
  signal s26: std_logic;
  signal s27: std_logic_vector(61 downto 0);
  signal s28: std_logic_vector(2 downto 0);
  signal s29: std_logic;
  signal s30: std_logic_vector(2 downto 0);
  signal s31: std_logic;
  signal s32: std_logic_vector(2 downto 0);
begin
  s2 <= n64_127(0);
  s3 <= n64_127(63 downto 0);
  s4 <= n64_127(63);
  s15 <= n128_191(0);
  s16 <= n128_191(63 downto 0);
  s17 <= n128_191(63);
  s23 <= n191_255(0);
  s24 <= n191_255(63 downto 0);
  s25 <= n191_255(63);
  s26 <= n0_63(0);
  s0 <= n0_63(63 downto 0);
  s9 <= n0_63(63);
  gate0: entity work.x64_61
    port map (
      i_64 => s0,
      o_64 => s1);
  s5(0) <= n0_63(62);
  s5(1) <= s9;
  s5(2) <= s2;
  s7(0) <= s9;
  s7(1) <= s2;
  s7(2) <= n64_127(1);
  gate1: entity work.x64_61
    port map (
      i_64 => s3,
      o_64 => s10);
  s11(0) <= n64_127(62);
  s11(1) <= s4;
  s11(2) <= s15;
  s13(0) <= s4;
  s13(1) <= s15;
  s13(2) <= n128_191(1);
  gate2: entity work.x64_61
    port map (
      i_64 => s16,
      o_64 => s18);
  s19(0) <= n128_191(62);
  s19(1) <= s17;
  s19(2) <= s23;
  s21(0) <= s17;
  s21(1) <= s23;
  s21(2) <= n191_255(1);
  gate3: entity work.x64_61
    port map (
      i_64 => s24,
      o_64 => s27);
  s28(0) <= n191_255(62);
  s28(1) <= s25;
  s28(2) <= n256;
  s30(0) <= s25;
  s30(1) <= n256;
  s30(2) <= s26;
  s32(0) <= n256;
  s32(1) <= s26;
  s32(2) <= n0_63(1);
  gate4: entity work.x
    port map (
      s => s5,
      o => s6);
  gate5: entity work.x
    port map (
      s => s7,
      o => s8);
  gate6: entity work.x
    port map (
      s => s11,
      o => s12);
  gate7: entity work.x
    port map (
      s => s13,
      o => s14);
  gate8: entity work.x
    port map (
      s => s19,
      o => s20);
  gate9: entity work.x
    port map (
      s => s21,
      o => s22);
  gate10: entity work.x
    port map (
      s => s28,
      o => s29);
  gate11: entity work.x
    port map (
      s => s30,
      o => s31);
  gate12: entity work.x
    port map (
      s => s32,
      o => o256);
  o0_63(61 downto 0) <= s1;
  o0_63(62) <= s6;
  o0_63(63) <= s8;
  o64_127(61 downto 0) <= s10;
  o64_127(62) <= s12;
  o64_127(63) <= s14;
  o128_191(61 downto 0) <= s18;
  o128_191(62) <= s20;
  o128_191(63) <= s22;
  o192_255(61 downto 0) <= s27;
  o192_255(62) <= s29;
  o192_255(63) <= s31;
end Behavioral;

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

-- ? : si ? si + ?i
-- where ?_i = 1 if i = 0 else 1
entity i is
  port (
    n64_127: in std_logic_vector(63 downto 0);
    n128_191: in std_logic_vector(63 downto 0);
    n191_255: in std_logic_vector(63 downto 0);
    n0_63: in std_logic_vector(63 downto 0);
    n256: in std_logic;
    o0_63: out std_logic_vector(63 downto 0);
    o64_127: out std_logic_vector(63 downto 0);
    o128_191: out std_logic_vector(63 downto 0);
    o192_255: out std_logic_vector(63 downto 0);
    o256: out std_logic);
end i;

architecture Behavioral of i is
begin
  o0_63(0) <= (n0_63(0) XOR '1');
  o0_63(63 downto 1) <= n0_63(63 downto 1);
  o64_127 <= n64_127;
  o128_191 <= n128_191;
  o192_255 <= n191_255;
  o256 <= n256;
end Behavioral;

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

-- ? : s_i ? s_i + s_i+3 + s_i+8 ,
entity thetha is
  port (
    n0_63: in std_logic_vector(63 downto 0);
    n64_127: in std_logic_vector(63 downto 0);
    n128_191: in std_logic_vector(63 downto 0);
    n192_255: in std_logic_vector(63 downto 0);
    n256: in std_logic;
    o0_63: out std_logic_vector(63 downto 0);
    o64_127: out std_logic_vector(63 downto 0);
    o128_191: out std_logic_vector(63 downto 0);
    o192_255: out std_logic_vector(63 downto 0);
    o256: out std_logic);
end thetha;

architecture Behavioral of thetha is
  signal s0: std_logic;
  signal s1: std_logic;
  signal s2: std_logic;
  signal s3: std_logic;
  signal s4: std_logic;
  signal s5: std_logic;
  signal s6: std_logic;
  signal s7: std_logic;
  signal s8: std_logic;
  signal s9: std_logic;
  signal s10: std_logic;
  signal s11: std_logic;
  signal s12: std_logic;
  signal s13: std_logic;
  signal s14: std_logic;
  signal s15: std_logic;
  signal s16: std_logic;
  signal s17: std_logic;
  signal s18: std_logic;
  signal s19: std_logic;
  signal s20: std_logic;
  signal s21: std_logic;
  signal s22: std_logic;
  signal s23: std_logic;
  signal s24: std_logic;
  signal s25: std_logic;
  signal s26: std_logic;
  signal s27: std_logic;
  signal s28: std_logic;
  signal s29: std_logic;
  signal s30: std_logic;
  signal s31: std_logic;
  signal s32: std_logic;
  signal s33: std_logic;
  signal s34: std_logic;
  signal s35: std_logic;
  signal s36: std_logic;
  signal s37: std_logic;
  signal s38: std_logic;
  signal s39: std_logic;
  signal s40: std_logic;
  signal s41: std_logic;
  signal s42: std_logic;
  signal s43: std_logic;
  signal s44: std_logic;
  signal s45: std_logic;
  signal s46: std_logic;
  signal s47: std_logic;
  signal s48: std_logic;
  signal s49: std_logic;
  signal s50: std_logic;
  signal s51: std_logic;
  signal s52: std_logic;
  signal s53: std_logic;
  signal s54: std_logic;
  signal s55: std_logic;
  signal s56: std_logic;
  signal s57: std_logic;
  signal s58: std_logic;
  signal s59: std_logic;
  signal s60: std_logic;
  signal s61: std_logic;
  signal s62: std_logic;
  signal s63: std_logic;
  signal s64: std_logic;
  signal s65: std_logic;
  signal s66: std_logic;
  signal s67: std_logic;
  signal s68: std_logic;
  signal s69: std_logic;
  signal s70: std_logic;
  signal s71: std_logic;
  signal s72: std_logic;
  signal s73: std_logic;
  signal s74: std_logic;
  signal s75: std_logic;
  signal s76: std_logic;
  signal s77: std_logic;
  signal s78: std_logic;
  signal s79: std_logic;
  signal s80: std_logic;
  signal s81: std_logic;
  signal s82: std_logic;
  signal s83: std_logic;
  signal s84: std_logic;
  signal s85: std_logic;
  signal s86: std_logic;
  signal s87: std_logic;
  signal s88: std_logic;
  signal s89: std_logic;
  signal s90: std_logic;
  signal s91: std_logic;
  signal s92: std_logic;
  signal s93: std_logic;
  signal s94: std_logic;
  signal s95: std_logic;
  signal s96: std_logic;
  signal s97: std_logic;
  signal s98: std_logic;
  signal s99: std_logic;
  signal s100: std_logic;
  signal s101: std_logic;
  signal s102: std_logic;
  signal s103: std_logic;
  signal s104: std_logic;
  signal s105: std_logic;
  signal s106: std_logic;
  signal s107: std_logic;
  signal s108: std_logic;
  signal s109: std_logic;
  signal s110: std_logic;
  signal s111: std_logic;
  signal s112: std_logic;
  signal s113: std_logic;
  signal s114: std_logic;
  signal s115: std_logic;
  signal s116: std_logic;
  signal s117: std_logic;
  signal s118: std_logic;
  signal s119: std_logic;
  signal s120: std_logic;
  signal s121: std_logic;
  signal s122: std_logic;
  signal s123: std_logic;
  signal s124: std_logic;
  signal s125: std_logic;
  signal s126: std_logic;
  signal s127: std_logic;
  signal s128: std_logic_vector(7 downto 0);
  signal s129: std_logic;
  signal s130: std_logic;
  signal s131: std_logic;
  signal s132: std_logic;
  signal s133: std_logic;
  signal s134: std_logic;
  signal s135: std_logic;
  signal s136: std_logic;
  signal s137: std_logic;
  signal s138: std_logic;
  signal s139: std_logic;
  signal s140: std_logic;
  signal s141: std_logic;
  signal s142: std_logic;
  signal s143: std_logic;
  signal s144: std_logic;
  signal s145: std_logic;
  signal s146: std_logic;
  signal s147: std_logic;
  signal s148: std_logic;
  signal s149: std_logic;
  signal s150: std_logic;
  signal s151: std_logic;
  signal s152: std_logic;
  signal s153: std_logic;
  signal s154: std_logic;
  signal s155: std_logic;
  signal s156: std_logic;
  signal s157: std_logic;
  signal s158: std_logic;
  signal s159: std_logic;
  signal s160: std_logic;
  signal s161: std_logic;
  signal s162: std_logic;
  signal s163: std_logic;
  signal s164: std_logic;
  signal s165: std_logic;
  signal s166: std_logic;
  signal s167: std_logic;
  signal s168: std_logic;
  signal s169: std_logic;
  signal s170: std_logic;
  signal s171: std_logic;
  signal s172: std_logic;
  signal s173: std_logic;
  signal s174: std_logic;
  signal s175: std_logic;
  signal s176: std_logic;
  signal s177: std_logic;
  signal s178: std_logic;
  signal s179: std_logic;
  signal s180: std_logic;
  signal s181: std_logic;
  signal s182: std_logic;
  signal s183: std_logic;
  signal s184: std_logic;
  signal s185: std_logic;
  signal s186: std_logic;
  signal s187: std_logic;
  signal s188: std_logic;
  signal s189: std_logic;
  signal s190: std_logic;
  signal s191: std_logic;
  signal s192: std_logic;
  signal s193: std_logic_vector(7 downto 0);
  signal s194: std_logic;
  signal s195: std_logic;
  signal s196: std_logic;
  signal s197: std_logic;
  signal s198: std_logic;
  signal s199: std_logic;
  signal s200: std_logic;
  signal s201: std_logic;
  signal s202: std_logic;
  signal s203: std_logic;
  signal s204: std_logic;
  signal s205: std_logic;
  signal s206: std_logic;
  signal s207: std_logic;
  signal s208: std_logic;
  signal s209: std_logic;
  signal s210: std_logic;
  signal s211: std_logic;
  signal s212: std_logic;
  signal s213: std_logic;
  signal s214: std_logic;
  signal s215: std_logic;
  signal s216: std_logic;
  signal s217: std_logic;
  signal s218: std_logic;
  signal s219: std_logic;
  signal s220: std_logic;
  signal s221: std_logic;
  signal s222: std_logic;
  signal s223: std_logic;
  signal s224: std_logic;
  signal s225: std_logic;
  signal s226: std_logic;
  signal s227: std_logic;
  signal s228: std_logic;
  signal s229: std_logic;
  signal s230: std_logic;
  signal s231: std_logic;
  signal s232: std_logic;
  signal s233: std_logic;
  signal s234: std_logic;
  signal s235: std_logic;
  signal s236: std_logic;
  signal s237: std_logic;
  signal s238: std_logic;
  signal s239: std_logic;
  signal s240: std_logic;
  signal s241: std_logic;
  signal s242: std_logic;
  signal s243: std_logic;
  signal s244: std_logic;
  signal s245: std_logic;
  signal s246: std_logic;
  signal s247: std_logic;
  signal s248: std_logic;
  signal s249: std_logic;
  signal s250: std_logic;
  signal s251: std_logic;
  signal s252: std_logic;
  signal s253: std_logic;
  signal s254: std_logic;
  signal s255: std_logic;
  signal s256: std_logic;
  signal s257: std_logic;
  signal s258: std_logic_vector(7 downto 0);
begin
  s0 <= n0_63(0);
  s1 <= n0_63(1);
  s2 <= n0_63(2);
  s3 <= n0_63(3);
  s4 <= n0_63(4);
  s5 <= n0_63(5);
  s6 <= n0_63(6);
  s7 <= n0_63(7);
  s8 <= n0_63(8);
  s9 <= n0_63(9);
  s10 <= n0_63(10);
  s11 <= n0_63(11);
  s12 <= n0_63(12);
  s13 <= n0_63(13);
  s14 <= n0_63(14);
  s15 <= n0_63(15);
  s16 <= n0_63(16);
  s17 <= n0_63(17);
  s18 <= n0_63(18);
  s19 <= n0_63(19);
  s20 <= n0_63(20);
  s21 <= n0_63(21);
  s22 <= n0_63(22);
  s23 <= n0_63(23);
  s24 <= n0_63(24);
  s25 <= n0_63(25);
  s26 <= n0_63(26);
  s27 <= n0_63(27);
  s28 <= n0_63(28);
  s29 <= n0_63(29);
  s30 <= n0_63(30);
  s31 <= n0_63(31);
  s32 <= n0_63(32);
  s33 <= n0_63(33);
  s34 <= n0_63(34);
  s35 <= n0_63(35);
  s36 <= n0_63(36);
  s37 <= n0_63(37);
  s38 <= n0_63(38);
  s39 <= n0_63(39);
  s40 <= n0_63(40);
  s41 <= n0_63(41);
  s42 <= n0_63(42);
  s43 <= n0_63(43);
  s44 <= n0_63(44);
  s45 <= n0_63(45);
  s46 <= n0_63(46);
  s47 <= n0_63(47);
  s48 <= n0_63(48);
  s49 <= n0_63(49);
  s50 <= n0_63(50);
  s51 <= n0_63(51);
  s52 <= n0_63(52);
  s53 <= n0_63(53);
  s54 <= n0_63(54);
  s55 <= n0_63(55);
  s56 <= n0_63(56);
  s57 <= n0_63(57);
  s58 <= n0_63(58);
  s59 <= n0_63(59);
  s60 <= n0_63(60);
  s61 <= n0_63(61);
  s62 <= n0_63(62);
  s63 <= n0_63(63);
  s67 <= n64_127(3);
  s68 <= n64_127(4);
  s69 <= n64_127(5);
  s70 <= n64_127(6);
  s71 <= n64_127(7);
  s72 <= n64_127(8);
  s73 <= n64_127(9);
  s74 <= n64_127(10);
  s75 <= n64_127(11);
  s76 <= n64_127(12);
  s77 <= n64_127(13);
  s78 <= n64_127(14);
  s79 <= n64_127(15);
  s80 <= n64_127(16);
  s81 <= n64_127(17);
  s82 <= n64_127(18);
  s83 <= n64_127(19);
  s84 <= n64_127(20);
  s85 <= n64_127(21);
  s86 <= n64_127(22);
  s87 <= n64_127(23);
  s88 <= n64_127(24);
  s89 <= n64_127(25);
  s90 <= n64_127(26);
  s91 <= n64_127(27);
  s92 <= n64_127(28);
  s93 <= n64_127(29);
  s94 <= n64_127(30);
  s95 <= n64_127(31);
  s96 <= n64_127(32);
  s97 <= n64_127(33);
  s98 <= n64_127(34);
  s99 <= n64_127(35);
  s100 <= n64_127(36);
  s101 <= n64_127(37);
  s102 <= n64_127(38);
  s103 <= n64_127(39);
  s104 <= n64_127(40);
  s105 <= n64_127(41);
  s106 <= n64_127(42);
  s107 <= n64_127(43);
  s108 <= n64_127(44);
  s109 <= n64_127(45);
  s110 <= n64_127(46);
  s111 <= n64_127(47);
  s112 <= n64_127(48);
  s113 <= n64_127(49);
  s114 <= n64_127(50);
  s115 <= n64_127(51);
  s116 <= n64_127(52);
  s117 <= n64_127(53);
  s118 <= n64_127(54);
  s119 <= n64_127(55);
  s120 <= n64_127(56);
  s121 <= n64_127(57);
  s122 <= n64_127(58);
  s123 <= n64_127(59);
  s124 <= n64_127(60);
  s125 <= n64_127(61);
  s126 <= n64_127(62);
  s127 <= n64_127(63);
  s128 <= n64_127(7 downto 0);
  s132 <= n128_191(3);
  s133 <= n128_191(4);
  s134 <= n128_191(5);
  s135 <= n128_191(6);
  s136 <= n128_191(7);
  s137 <= n128_191(8);
  s138 <= n128_191(9);
  s139 <= n128_191(10);
  s140 <= n128_191(11);
  s141 <= n128_191(12);
  s142 <= n128_191(13);
  s143 <= n128_191(14);
  s144 <= n128_191(15);
  s145 <= n128_191(16);
  s146 <= n128_191(17);
  s147 <= n128_191(18);
  s148 <= n128_191(19);
  s149 <= n128_191(20);
  s150 <= n128_191(21);
  s151 <= n128_191(22);
  s152 <= n128_191(23);
  s153 <= n128_191(24);
  s154 <= n128_191(25);
  s155 <= n128_191(26);
  s156 <= n128_191(27);
  s157 <= n128_191(28);
  s158 <= n128_191(29);
  s159 <= n128_191(30);
  s160 <= n128_191(31);
  s161 <= n128_191(32);
  s162 <= n128_191(33);
  s163 <= n128_191(34);
  s164 <= n128_191(35);
  s165 <= n128_191(36);
  s166 <= n128_191(37);
  s167 <= n128_191(38);
  s168 <= n128_191(39);
  s169 <= n128_191(40);
  s170 <= n128_191(41);
  s171 <= n128_191(42);
  s172 <= n128_191(43);
  s173 <= n128_191(44);
  s174 <= n128_191(45);
  s175 <= n128_191(46);
  s176 <= n128_191(47);
  s177 <= n128_191(48);
  s178 <= n128_191(49);
  s179 <= n128_191(50);
  s180 <= n128_191(51);
  s181 <= n128_191(52);
  s182 <= n128_191(53);
  s183 <= n128_191(54);
  s184 <= n128_191(55);
  s185 <= n128_191(56);
  s186 <= n128_191(57);
  s187 <= n128_191(58);
  s188 <= n128_191(59);
  s189 <= n128_191(60);
  s190 <= n128_191(61);
  s191 <= n128_191(62);
  s192 <= n128_191(63);
  s193 <= n128_191(7 downto 0);
  s197 <= n192_255(3);
  s198 <= n192_255(4);
  s199 <= n192_255(5);
  s200 <= n192_255(6);
  s201 <= n192_255(7);
  s202 <= n192_255(8);
  s203 <= n192_255(9);
  s204 <= n192_255(10);
  s205 <= n192_255(11);
  s206 <= n192_255(12);
  s207 <= n192_255(13);
  s208 <= n192_255(14);
  s209 <= n192_255(15);
  s210 <= n192_255(16);
  s211 <= n192_255(17);
  s212 <= n192_255(18);
  s213 <= n192_255(19);
  s214 <= n192_255(20);
  s215 <= n192_255(21);
  s216 <= n192_255(22);
  s217 <= n192_255(23);
  s218 <= n192_255(24);
  s219 <= n192_255(25);
  s220 <= n192_255(26);
  s221 <= n192_255(27);
  s222 <= n192_255(28);
  s223 <= n192_255(29);
  s224 <= n192_255(30);
  s225 <= n192_255(31);
  s226 <= n192_255(32);
  s227 <= n192_255(33);
  s228 <= n192_255(34);
  s229 <= n192_255(35);
  s230 <= n192_255(36);
  s231 <= n192_255(37);
  s232 <= n192_255(38);
  s233 <= n192_255(39);
  s234 <= n192_255(40);
  s235 <= n192_255(41);
  s236 <= n192_255(42);
  s237 <= n192_255(43);
  s238 <= n192_255(44);
  s239 <= n192_255(45);
  s240 <= n192_255(46);
  s241 <= n192_255(47);
  s242 <= n192_255(48);
  s243 <= n192_255(49);
  s244 <= n192_255(50);
  s245 <= n192_255(51);
  s246 <= n192_255(52);
  s247 <= n192_255(53);
  s248 <= n192_255(54);
  s249 <= n192_255(55);
  s250 <= n192_255(56);
  s251 <= n192_255(57);
  s252 <= n192_255(58);
  s253 <= n192_255(59);
  s254 <= n192_255(60);
  s255 <= n192_255(61);
  s256 <= n192_255(62);
  s257 <= n192_255(63);
  s258 <= n192_255(7 downto 0);
  o192_255(0) <= (n192_255(0) XOR s197 XOR s202);
  o192_255(1) <= (n192_255(1) XOR s198 XOR s203);
  o192_255(2) <= (n192_255(2) XOR s199 XOR s204);
  o192_255(3) <= (s197 XOR s200 XOR s205);
  o192_255(4) <= (s198 XOR s201 XOR s206);
  o192_255(5) <= (s199 XOR s202 XOR s207);
  o192_255(6) <= (s200 XOR s203 XOR s208);
  o192_255(7) <= (s201 XOR s204 XOR s209);
  o192_255(8) <= (s202 XOR s205 XOR s210);
  o192_255(9) <= (s203 XOR s206 XOR s211);
  o192_255(10) <= (s204 XOR s207 XOR s212);
  o192_255(11) <= (s205 XOR s208 XOR s213);
  o192_255(12) <= (s206 XOR s209 XOR s214);
  o192_255(13) <= (s207 XOR s210 XOR s215);
  o192_255(14) <= (s208 XOR s211 XOR s216);
  o192_255(15) <= (s209 XOR s212 XOR s217);
  o192_255(16) <= (s210 XOR s213 XOR s218);
  o192_255(17) <= (s211 XOR s214 XOR s219);
  o192_255(18) <= (s212 XOR s215 XOR s220);
  o192_255(19) <= (s213 XOR s216 XOR s221);
  o192_255(20) <= (s214 XOR s217 XOR s222);
  o192_255(21) <= (s215 XOR s218 XOR s223);
  o192_255(22) <= (s216 XOR s219 XOR s224);
  o192_255(23) <= (s217 XOR s220 XOR s225);
  o192_255(24) <= (s218 XOR s221 XOR s226);
  o192_255(25) <= (s219 XOR s222 XOR s227);
  o192_255(26) <= (s220 XOR s223 XOR s228);
  o192_255(27) <= (s221 XOR s224 XOR s229);
  o192_255(28) <= (s222 XOR s225 XOR s230);
  o192_255(29) <= (s223 XOR s226 XOR s231);
  o192_255(30) <= (s224 XOR s227 XOR s232);
  o192_255(31) <= (s225 XOR s228 XOR s233);
  o192_255(32) <= (s226 XOR s229 XOR s234);
  o192_255(33) <= (s227 XOR s230 XOR s235);
  o192_255(34) <= (s228 XOR s231 XOR s236);
  o192_255(35) <= (s229 XOR s232 XOR s237);
  o192_255(36) <= (s230 XOR s233 XOR s238);
  o192_255(37) <= (s231 XOR s234 XOR s239);
  o192_255(38) <= (s232 XOR s235 XOR s240);
  o192_255(39) <= (s233 XOR s236 XOR s241);
  o192_255(40) <= (s234 XOR s237 XOR s242);
  o192_255(41) <= (s235 XOR s238 XOR s243);
  o192_255(42) <= (s236 XOR s239 XOR s244);
  o192_255(43) <= (s237 XOR s240 XOR s245);
  o192_255(44) <= (s238 XOR s241 XOR s246);
  o192_255(45) <= (s239 XOR s242 XOR s247);
  o192_255(46) <= (s240 XOR s243 XOR s248);
  o192_255(47) <= (s241 XOR s244 XOR s249);
  o192_255(48) <= (s242 XOR s245 XOR s250);
  o192_255(49) <= (s243 XOR s246 XOR s251);
  o192_255(50) <= (s244 XOR s247 XOR s252);
  o192_255(51) <= (s245 XOR s248 XOR s253);
  o192_255(52) <= (s246 XOR s249 XOR s254);
  o192_255(53) <= (s247 XOR s250 XOR s255);
  o192_255(54) <= (s248 XOR s251 XOR s256);
  o192_255(55) <= (s249 XOR s252 XOR s257);
  o192_255(56) <= (s250 XOR s253 XOR n256);
  o192_255(57) <= (s251 XOR s254 XOR s0);
  o192_255(58) <= (s252 XOR s255 XOR s1);
  o192_255(59) <= (s253 XOR s256 XOR s2);
  o192_255(60) <= (s254 XOR s257 XOR s3);
  o192_255(61) <= (s255 XOR n256 XOR s4);
  o192_255(62) <= (s256 XOR s0 XOR s5);
  o192_255(63) <= (s257 XOR s1 XOR s6);
  o256 <= (n256 XOR s2 XOR s7);
  s64 <= s128(0);
  s65 <= s128(1);
  s66 <= s128(2);
  s129 <= s193(0);
  s130 <= s193(1);
  s131 <= s193(2);
  s194 <= s258(0);
  s195 <= s258(1);
  s196 <= s258(2);
  o0_63(0) <= (s0 XOR s3 XOR s8);
  o0_63(1) <= (s1 XOR s4 XOR s9);
  o0_63(2) <= (s2 XOR s5 XOR s10);
  o0_63(3) <= (s3 XOR s6 XOR s11);
  o0_63(4) <= (s4 XOR s7 XOR s12);
  o0_63(5) <= (s5 XOR s8 XOR s13);
  o0_63(6) <= (s6 XOR s9 XOR s14);
  o0_63(7) <= (s7 XOR s10 XOR s15);
  o0_63(8) <= (s8 XOR s11 XOR s16);
  o0_63(9) <= (s9 XOR s12 XOR s17);
  o0_63(10) <= (s10 XOR s13 XOR s18);
  o0_63(11) <= (s11 XOR s14 XOR s19);
  o0_63(12) <= (s12 XOR s15 XOR s20);
  o0_63(13) <= (s13 XOR s16 XOR s21);
  o0_63(14) <= (s14 XOR s17 XOR s22);
  o0_63(15) <= (s15 XOR s18 XOR s23);
  o0_63(16) <= (s16 XOR s19 XOR s24);
  o0_63(17) <= (s17 XOR s20 XOR s25);
  o0_63(18) <= (s18 XOR s21 XOR s26);
  o0_63(19) <= (s19 XOR s22 XOR s27);
  o0_63(20) <= (s20 XOR s23 XOR s28);
  o0_63(21) <= (s21 XOR s24 XOR s29);
  o0_63(22) <= (s22 XOR s25 XOR s30);
  o0_63(23) <= (s23 XOR s26 XOR s31);
  o0_63(24) <= (s24 XOR s27 XOR s32);
  o0_63(25) <= (s25 XOR s28 XOR s33);
  o0_63(26) <= (s26 XOR s29 XOR s34);
  o0_63(27) <= (s27 XOR s30 XOR s35);
  o0_63(28) <= (s28 XOR s31 XOR s36);
  o0_63(29) <= (s29 XOR s32 XOR s37);
  o0_63(30) <= (s30 XOR s33 XOR s38);
  o0_63(31) <= (s31 XOR s34 XOR s39);
  o0_63(32) <= (s32 XOR s35 XOR s40);
  o0_63(33) <= (s33 XOR s36 XOR s41);
  o0_63(34) <= (s34 XOR s37 XOR s42);
  o0_63(35) <= (s35 XOR s38 XOR s43);
  o0_63(36) <= (s36 XOR s39 XOR s44);
  o0_63(37) <= (s37 XOR s40 XOR s45);
  o0_63(38) <= (s38 XOR s41 XOR s46);
  o0_63(39) <= (s39 XOR s42 XOR s47);
  o0_63(40) <= (s40 XOR s43 XOR s48);
  o0_63(41) <= (s41 XOR s44 XOR s49);
  o0_63(42) <= (s42 XOR s45 XOR s50);
  o0_63(43) <= (s43 XOR s46 XOR s51);
  o0_63(44) <= (s44 XOR s47 XOR s52);
  o0_63(45) <= (s45 XOR s48 XOR s53);
  o0_63(46) <= (s46 XOR s49 XOR s54);
  o0_63(47) <= (s47 XOR s50 XOR s55);
  o0_63(48) <= (s48 XOR s51 XOR s56);
  o0_63(49) <= (s49 XOR s52 XOR s57);
  o0_63(50) <= (s50 XOR s53 XOR s58);
  o0_63(51) <= (s51 XOR s54 XOR s59);
  o0_63(52) <= (s52 XOR s55 XOR s60);
  o0_63(53) <= (s53 XOR s56 XOR s61);
  o0_63(54) <= (s54 XOR s57 XOR s62);
  o0_63(55) <= (s55 XOR s58 XOR s63);
  o0_63(56) <= (s56 XOR s59 XOR s64);
  o0_63(57) <= (s57 XOR s60 XOR s65);
  o0_63(58) <= (s58 XOR s61 XOR s66);
  o0_63(59) <= (s59 XOR s62 XOR s128(3));
  o0_63(60) <= (s60 XOR s63 XOR s128(4));
  o0_63(61) <= (s61 XOR s64 XOR s128(5));
  o0_63(62) <= (s62 XOR s65 XOR s128(6));
  o0_63(63) <= (s63 XOR s66 XOR s128(7));
  o64_127(0) <= (n64_127(0) XOR s67 XOR s72);
  o64_127(1) <= (n64_127(1) XOR s68 XOR s73);
  o64_127(2) <= (n64_127(2) XOR s69 XOR s74);
  o64_127(3) <= (s67 XOR s70 XOR s75);
  o64_127(4) <= (s68 XOR s71 XOR s76);
  o64_127(5) <= (s69 XOR s72 XOR s77);
  o64_127(6) <= (s70 XOR s73 XOR s78);
  o64_127(7) <= (s71 XOR s74 XOR s79);
  o64_127(8) <= (s72 XOR s75 XOR s80);
  o64_127(9) <= (s73 XOR s76 XOR s81);
  o64_127(10) <= (s74 XOR s77 XOR s82);
  o64_127(11) <= (s75 XOR s78 XOR s83);
  o64_127(12) <= (s76 XOR s79 XOR s84);
  o64_127(13) <= (s77 XOR s80 XOR s85);
  o64_127(14) <= (s78 XOR s81 XOR s86);
  o64_127(15) <= (s79 XOR s82 XOR s87);
  o64_127(16) <= (s80 XOR s83 XOR s88);
  o64_127(17) <= (s81 XOR s84 XOR s89);
  o64_127(18) <= (s82 XOR s85 XOR s90);
  o64_127(19) <= (s83 XOR s86 XOR s91);
  o64_127(20) <= (s84 XOR s87 XOR s92);
  o64_127(21) <= (s85 XOR s88 XOR s93);
  o64_127(22) <= (s86 XOR s89 XOR s94);
  o64_127(23) <= (s87 XOR s90 XOR s95);
  o64_127(24) <= (s88 XOR s91 XOR s96);
  o64_127(25) <= (s89 XOR s92 XOR s97);
  o64_127(26) <= (s90 XOR s93 XOR s98);
  o64_127(27) <= (s91 XOR s94 XOR s99);
  o64_127(28) <= (s92 XOR s95 XOR s100);
  o64_127(29) <= (s93 XOR s96 XOR s101);
  o64_127(30) <= (s94 XOR s97 XOR s102);
  o64_127(31) <= (s95 XOR s98 XOR s103);
  o64_127(32) <= (s96 XOR s99 XOR s104);
  o64_127(33) <= (s97 XOR s100 XOR s105);
  o64_127(34) <= (s98 XOR s101 XOR s106);
  o64_127(35) <= (s99 XOR s102 XOR s107);
  o64_127(36) <= (s100 XOR s103 XOR s108);
  o64_127(37) <= (s101 XOR s104 XOR s109);
  o64_127(38) <= (s102 XOR s105 XOR s110);
  o64_127(39) <= (s103 XOR s106 XOR s111);
  o64_127(40) <= (s104 XOR s107 XOR s112);
  o64_127(41) <= (s105 XOR s108 XOR s113);
  o64_127(42) <= (s106 XOR s109 XOR s114);
  o64_127(43) <= (s107 XOR s110 XOR s115);
  o64_127(44) <= (s108 XOR s111 XOR s116);
  o64_127(45) <= (s109 XOR s112 XOR s117);
  o64_127(46) <= (s110 XOR s113 XOR s118);
  o64_127(47) <= (s111 XOR s114 XOR s119);
  o64_127(48) <= (s112 XOR s115 XOR s120);
  o64_127(49) <= (s113 XOR s116 XOR s121);
  o64_127(50) <= (s114 XOR s117 XOR s122);
  o64_127(51) <= (s115 XOR s118 XOR s123);
  o64_127(52) <= (s116 XOR s119 XOR s124);
  o64_127(53) <= (s117 XOR s120 XOR s125);
  o64_127(54) <= (s118 XOR s121 XOR s126);
  o64_127(55) <= (s119 XOR s122 XOR s127);
  o64_127(56) <= (s120 XOR s123 XOR s129);
  o64_127(57) <= (s121 XOR s124 XOR s130);
  o64_127(58) <= (s122 XOR s125 XOR s131);
  o64_127(59) <= (s123 XOR s126 XOR s193(3));
  o64_127(60) <= (s124 XOR s127 XOR s193(4));
  o64_127(61) <= (s125 XOR s129 XOR s193(5));
  o64_127(62) <= (s126 XOR s130 XOR s193(6));
  o64_127(63) <= (s127 XOR s131 XOR s193(7));
  o128_191(0) <= (n128_191(0) XOR s132 XOR s137);
  o128_191(1) <= (n128_191(1) XOR s133 XOR s138);
  o128_191(2) <= (n128_191(2) XOR s134 XOR s139);
  o128_191(3) <= (s132 XOR s135 XOR s140);
  o128_191(4) <= (s133 XOR s136 XOR s141);
  o128_191(5) <= (s134 XOR s137 XOR s142);
  o128_191(6) <= (s135 XOR s138 XOR s143);
  o128_191(7) <= (s136 XOR s139 XOR s144);
  o128_191(8) <= (s137 XOR s140 XOR s145);
  o128_191(9) <= (s138 XOR s141 XOR s146);
  o128_191(10) <= (s139 XOR s142 XOR s147);
  o128_191(11) <= (s140 XOR s143 XOR s148);
  o128_191(12) <= (s141 XOR s144 XOR s149);
  o128_191(13) <= (s142 XOR s145 XOR s150);
  o128_191(14) <= (s143 XOR s146 XOR s151);
  o128_191(15) <= (s144 XOR s147 XOR s152);
  o128_191(16) <= (s145 XOR s148 XOR s153);
  o128_191(17) <= (s146 XOR s149 XOR s154);
  o128_191(18) <= (s147 XOR s150 XOR s155);
  o128_191(19) <= (s148 XOR s151 XOR s156);
  o128_191(20) <= (s149 XOR s152 XOR s157);
  o128_191(21) <= (s150 XOR s153 XOR s158);
  o128_191(22) <= (s151 XOR s154 XOR s159);
  o128_191(23) <= (s152 XOR s155 XOR s160);
  o128_191(24) <= (s153 XOR s156 XOR s161);
  o128_191(25) <= (s154 XOR s157 XOR s162);
  o128_191(26) <= (s155 XOR s158 XOR s163);
  o128_191(27) <= (s156 XOR s159 XOR s164);
  o128_191(28) <= (s157 XOR s160 XOR s165);
  o128_191(29) <= (s158 XOR s161 XOR s166);
  o128_191(30) <= (s159 XOR s162 XOR s167);
  o128_191(31) <= (s160 XOR s163 XOR s168);
  o128_191(32) <= (s161 XOR s164 XOR s169);
  o128_191(33) <= (s162 XOR s165 XOR s170);
  o128_191(34) <= (s163 XOR s166 XOR s171);
  o128_191(35) <= (s164 XOR s167 XOR s172);
  o128_191(36) <= (s165 XOR s168 XOR s173);
  o128_191(37) <= (s166 XOR s169 XOR s174);
  o128_191(38) <= (s167 XOR s170 XOR s175);
  o128_191(39) <= (s168 XOR s171 XOR s176);
  o128_191(40) <= (s169 XOR s172 XOR s177);
  o128_191(41) <= (s170 XOR s173 XOR s178);
  o128_191(42) <= (s171 XOR s174 XOR s179);
  o128_191(43) <= (s172 XOR s175 XOR s180);
  o128_191(44) <= (s173 XOR s176 XOR s181);
  o128_191(45) <= (s174 XOR s177 XOR s182);
  o128_191(46) <= (s175 XOR s178 XOR s183);
  o128_191(47) <= (s176 XOR s179 XOR s184);
  o128_191(48) <= (s177 XOR s180 XOR s185);
  o128_191(49) <= (s178 XOR s181 XOR s186);
  o128_191(50) <= (s179 XOR s182 XOR s187);
  o128_191(51) <= (s180 XOR s183 XOR s188);
  o128_191(52) <= (s181 XOR s184 XOR s189);
  o128_191(53) <= (s182 XOR s185 XOR s190);
  o128_191(54) <= (s183 XOR s186 XOR s191);
  o128_191(55) <= (s184 XOR s187 XOR s192);
  o128_191(56) <= (s185 XOR s188 XOR s194);
  o128_191(57) <= (s186 XOR s189 XOR s195);
  o128_191(58) <= (s187 XOR s190 XOR s196);
  o128_191(59) <= (s188 XOR s191 XOR s258(3));
  o128_191(60) <= (s189 XOR s192 XOR s258(4));
  o128_191(61) <= (s190 XOR s194 XOR s258(5));
  o128_191(62) <= (s191 XOR s195 XOR s258(6));
  o128_191(63) <= (s192 XOR s196 XOR s258(7));
end Behavioral;

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

-- ? : s_i ? s_12i
entity pi is
  port (
    n64_127: in std_logic_vector(63 downto 0);
    n128_191: in std_logic_vector(63 downto 0);
    n191_255: in std_logic_vector(63 downto 0);
    n0_63: in std_logic_vector(63 downto 0);
    n256: in std_logic;
    o0_63: out std_logic_vector(63 downto 0);
    o64_127: out std_logic_vector(63 downto 0);
    o128_191: out std_logic_vector(63 downto 0);
    o192_255: out std_logic_vector(63 downto 0);
    o256: out std_logic);
end pi;

architecture Behavioral of pi is
begin
  o0_63(0) <= n0_63(0);
  o0_63(1) <= n0_63(12);
  o0_63(2) <= n0_63(24);
  o0_63(3) <= n0_63(36);
  o0_63(4) <= n0_63(48);
  o0_63(5) <= n0_63(60);
  o0_63(6) <= n64_127(8);
  o0_63(7) <= n64_127(20);
  o0_63(8) <= n64_127(32);
  o0_63(9) <= n64_127(44);
  o0_63(10) <= n64_127(56);
  o0_63(11) <= n128_191(4);
  o0_63(12) <= n128_191(16);
  o0_63(13) <= n128_191(28);
  o0_63(14) <= n128_191(40);
  o0_63(15) <= n128_191(52);
  o0_63(16) <= n191_255(0);
  o0_63(17) <= n191_255(12);
  o0_63(18) <= n191_255(24);
  o0_63(19) <= n191_255(36);
  o0_63(20) <= n191_255(48);
  o0_63(21) <= n191_255(60);
  o0_63(22) <= n0_63(7);
  o0_63(23) <= n0_63(19);
  o0_63(24) <= n0_63(31);
  o0_63(25) <= n0_63(43);
  o0_63(26) <= n0_63(55);
  o0_63(27) <= n64_127(3);
  o0_63(28) <= n64_127(15);
  o0_63(29) <= n64_127(27);
  o0_63(30) <= n64_127(39);
  o0_63(31) <= n64_127(51);
  o0_63(32) <= n64_127(63);
  o0_63(33) <= n128_191(11);
  o0_63(34) <= n128_191(23);
  o0_63(35) <= n128_191(35);
  o0_63(36) <= n128_191(47);
  o0_63(37) <= n128_191(59);
  o0_63(38) <= n191_255(7);
  o0_63(39) <= n191_255(19);
  o0_63(40) <= n191_255(31);
  o0_63(41) <= n191_255(43);
  o0_63(42) <= n191_255(55);
  o0_63(43) <= n0_63(2);
  o0_63(44) <= n0_63(14);
  o0_63(45) <= n0_63(26);
  o0_63(46) <= n0_63(38);
  o0_63(47) <= n0_63(50);
  o0_63(48) <= n0_63(62);
  o0_63(49) <= n64_127(10);
  o0_63(50) <= n64_127(22);
  o0_63(51) <= n64_127(34);
  o0_63(52) <= n64_127(46);
  o0_63(53) <= n64_127(58);
  o0_63(54) <= n128_191(6);
  o0_63(55) <= n128_191(18);
  o0_63(56) <= n128_191(30);
  o0_63(57) <= n128_191(42);
  o0_63(58) <= n128_191(54);
  o0_63(59) <= n191_255(2);
  o0_63(60) <= n191_255(14);
  o0_63(61) <= n191_255(26);
  o0_63(62) <= n191_255(38);
  o0_63(63) <= n191_255(50);
  o64_127(0) <= n191_255(62);
  o64_127(1) <= n0_63(9);
  o64_127(2) <= n0_63(21);
  o64_127(3) <= n0_63(33);
  o64_127(4) <= n0_63(45);
  o64_127(5) <= n0_63(57);
  o64_127(6) <= n64_127(5);
  o64_127(7) <= n64_127(17);
  o64_127(8) <= n64_127(29);
  o64_127(9) <= n64_127(41);
  o64_127(10) <= n64_127(53);
  o64_127(11) <= n128_191(1);
  o64_127(12) <= n128_191(13);
  o64_127(13) <= n128_191(25);
  o64_127(14) <= n128_191(37);
  o64_127(15) <= n128_191(49);
  o64_127(16) <= n128_191(61);
  o64_127(17) <= n191_255(9);
  o64_127(18) <= n191_255(21);
  o64_127(19) <= n191_255(33);
  o64_127(20) <= n191_255(45);
  o64_127(21) <= n191_255(57);
  o64_127(22) <= n0_63(4);
  o64_127(23) <= n0_63(16);
  o64_127(24) <= n0_63(28);
  o64_127(25) <= n0_63(40);
  o64_127(26) <= n0_63(52);
  o64_127(27) <= n64_127(0);
  o64_127(28) <= n64_127(12);
  o64_127(29) <= n64_127(24);
  o64_127(30) <= n64_127(36);
  o64_127(31) <= n64_127(48);
  o64_127(32) <= n64_127(60);
  o64_127(33) <= n128_191(8);
  o64_127(34) <= n128_191(20);
  o64_127(35) <= n128_191(32);
  o64_127(36) <= n128_191(44);
  o64_127(37) <= n128_191(56);
  o64_127(38) <= n191_255(4);
  o64_127(39) <= n191_255(16);
  o64_127(40) <= n191_255(28);
  o64_127(41) <= n191_255(40);
  o64_127(42) <= n191_255(52);
  o64_127(43) <= n256;
  o64_127(44) <= n0_63(11);
  o64_127(45) <= n0_63(23);
  o64_127(46) <= n0_63(35);
  o64_127(47) <= n0_63(47);
  o64_127(48) <= n0_63(59);
  o64_127(49) <= n64_127(7);
  o64_127(50) <= n64_127(19);
  o64_127(51) <= n64_127(31);
  o64_127(52) <= n64_127(43);
  o64_127(53) <= n64_127(55);
  o64_127(54) <= n128_191(3);
  o64_127(55) <= n128_191(15);
  o64_127(56) <= n128_191(27);
  o64_127(57) <= n128_191(39);
  o64_127(58) <= n128_191(51);
  o64_127(59) <= n128_191(63);
  o64_127(60) <= n191_255(11);
  o64_127(61) <= n191_255(23);
  o64_127(62) <= n191_255(35);
  o64_127(63) <= n191_255(47);
  o192_255(0) <= n191_255(59);
  o192_255(1) <= n0_63(6);
  o192_255(2) <= n0_63(18);
  o192_255(3) <= n0_63(30);
  o192_255(4) <= n0_63(42);
  o192_255(5) <= n0_63(54);
  o192_255(6) <= n64_127(2);
  o192_255(7) <= n64_127(14);
  o192_255(8) <= n64_127(26);
  o192_255(9) <= n64_127(38);
  o192_255(10) <= n64_127(50);
  o192_255(11) <= n64_127(62);
  o192_255(12) <= n128_191(10);
  o192_255(13) <= n128_191(22);
  o192_255(14) <= n128_191(34);
  o192_255(15) <= n128_191(46);
  o192_255(16) <= n128_191(58);
  o192_255(17) <= n191_255(6);
  o192_255(18) <= n191_255(18);
  o192_255(19) <= n191_255(30);
  o192_255(20) <= n191_255(42);
  o192_255(21) <= n191_255(54);
  o192_255(22) <= n0_63(1);
  o192_255(23) <= n0_63(13);
  o192_255(24) <= n0_63(25);
  o192_255(25) <= n0_63(37);
  o192_255(26) <= n0_63(49);
  o192_255(27) <= n0_63(61);
  o192_255(28) <= n64_127(9);
  o192_255(29) <= n64_127(21);
  o192_255(30) <= n64_127(33);
  o192_255(31) <= n64_127(45);
  o192_255(32) <= n64_127(57);
  o192_255(33) <= n128_191(5);
  o192_255(34) <= n128_191(17);
  o192_255(35) <= n128_191(29);
  o192_255(36) <= n128_191(41);
  o192_255(37) <= n128_191(53);
  o192_255(38) <= n191_255(1);
  o192_255(39) <= n191_255(13);
  o192_255(40) <= n191_255(25);
  o192_255(41) <= n191_255(37);
  o192_255(42) <= n191_255(49);
  o192_255(43) <= n191_255(61);
  o192_255(44) <= n0_63(8);
  o192_255(45) <= n0_63(20);
  o192_255(46) <= n0_63(32);
  o192_255(47) <= n0_63(44);
  o192_255(48) <= n0_63(56);
  o192_255(49) <= n64_127(4);
  o192_255(50) <= n64_127(16);
  o192_255(51) <= n64_127(28);
  o192_255(52) <= n64_127(40);
  o192_255(53) <= n64_127(52);
  o192_255(54) <= n128_191(0);
  o192_255(55) <= n128_191(12);
  o192_255(56) <= n128_191(24);
  o192_255(57) <= n128_191(36);
  o192_255(58) <= n128_191(48);
  o192_255(59) <= n128_191(60);
  o192_255(60) <= n191_255(8);
  o192_255(61) <= n191_255(20);
  o192_255(62) <= n191_255(32);
  o192_255(63) <= n191_255(44);
  o128_191(0) <= n191_255(56);
  o128_191(1) <= n0_63(3);
  o128_191(2) <= n0_63(15);
  o128_191(3) <= n0_63(27);
  o128_191(4) <= n0_63(39);
  o128_191(5) <= n0_63(51);
  o128_191(6) <= n0_63(63);
  o128_191(7) <= n64_127(11);
  o128_191(8) <= n64_127(23);
  o128_191(9) <= n64_127(35);
  o128_191(10) <= n64_127(47);
  o128_191(11) <= n64_127(59);
  o128_191(12) <= n128_191(7);
  o128_191(13) <= n128_191(19);
  o128_191(14) <= n128_191(31);
  o128_191(15) <= n128_191(43);
  o128_191(16) <= n128_191(55);
  o128_191(17) <= n191_255(3);
  o128_191(18) <= n191_255(15);
  o128_191(19) <= n191_255(27);
  o128_191(20) <= n191_255(39);
  o128_191(21) <= n191_255(51);
  o128_191(22) <= n191_255(63);
  o128_191(23) <= n0_63(10);
  o128_191(24) <= n0_63(22);
  o128_191(25) <= n0_63(34);
  o128_191(26) <= n0_63(46);
  o128_191(27) <= n0_63(58);
  o128_191(28) <= n64_127(6);
  o128_191(29) <= n64_127(18);
  o128_191(30) <= n64_127(30);
  o128_191(31) <= n64_127(42);
  o128_191(32) <= n64_127(54);
  o128_191(33) <= n128_191(2);
  o128_191(34) <= n128_191(14);
  o128_191(35) <= n128_191(26);
  o128_191(36) <= n128_191(38);
  o128_191(37) <= n128_191(50);
  o128_191(38) <= n128_191(62);
  o128_191(39) <= n191_255(10);
  o128_191(40) <= n191_255(22);
  o128_191(41) <= n191_255(34);
  o128_191(42) <= n191_255(46);
  o128_191(43) <= n191_255(58);
  o128_191(44) <= n0_63(5);
  o128_191(45) <= n0_63(17);
  o128_191(46) <= n0_63(29);
  o128_191(47) <= n0_63(41);
  o128_191(48) <= n0_63(53);
  o128_191(49) <= n64_127(1);
  o128_191(50) <= n64_127(13);
  o128_191(51) <= n64_127(25);
  o128_191(52) <= n64_127(37);
  o128_191(53) <= n64_127(49);
  o128_191(54) <= n64_127(61);
  o128_191(55) <= n128_191(9);
  o128_191(56) <= n128_191(21);
  o128_191(57) <= n128_191(33);
  o128_191(58) <= n128_191(45);
  o128_191(59) <= n128_191(57);
  o128_191(60) <= n191_255(5);
  o128_191(61) <= n191_255(17);
  o128_191(62) <= n191_255(29);
  o128_191(63) <= n191_255(41);
  o256 <= n191_255(53);
end Behavioral;

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

entity subterranean_round is
  port (
    n0_63: in std_logic_vector(63 downto 0);
    n64_127: in std_logic_vector(63 downto 0);
    n128_191: in std_logic_vector(63 downto 0);
    n192_255: in std_logic_vector(63 downto 0);
    n256: in std_logic;
    o0_63: out std_logic_vector(63 downto 0);
    o64_127: out std_logic_vector(63 downto 0);
    o128_191: out std_logic_vector(63 downto 0);
    o191_255: out std_logic_vector(63 downto 0);
    o256: out std_logic);
end subterranean_round;

architecture Behavioral of subterranean_round is
  signal s0: std_logic_vector(63 downto 0);
  signal s1: std_logic_vector(63 downto 0);
  signal s2: std_logic_vector(63 downto 0);
  signal s3: std_logic_vector(63 downto 0);
  signal s4: std_logic;
  signal s5: std_logic_vector(63 downto 0);
  signal s6: std_logic_vector(63 downto 0);
  signal s7: std_logic_vector(63 downto 0);
  signal s8: std_logic_vector(63 downto 0);
  signal s9: std_logic;
  signal s10: std_logic_vector(63 downto 0);
  signal s11: std_logic_vector(63 downto 0);
  signal s12: std_logic_vector(63 downto 0);
  signal s13: std_logic_vector(63 downto 0);
  signal s14: std_logic;
begin
  gate0: entity work.chi
    port map (
      n64_127 => n0_63,
      n128_191 => n64_127,
      n191_255 => n128_191,
      n0_63 => n192_255,
      n256 => n256,
      o0_63 => s0,
      o64_127 => s1,
      o128_191 => s2,
      o192_255 => s3,
      o256 => s4);
  gate1: entity work.i
    port map (
      n64_127 => s0,
      n128_191 => s1,
      n191_255 => s2,
      n0_63 => s3,
      n256 => s4,
      o0_63 => s5,
      o64_127 => s6,
      o128_191 => s7,
      o192_255 => s8,
      o256 => s9);
  gate2: entity work.thetha
    port map (
      n0_63 => s5,
      n64_127 => s6,
      n128_191 => s7,
      n192_255 => s8,
      n256 => s9,
      o0_63 => s10,
      o64_127 => s11,
      o128_191 => s12,
      o192_255 => s13,
      o256 => s14);
  gate3: entity work.pi
    port map (
      n64_127 => s10,
      n128_191 => s11,
      n191_255 => s12,
      n0_63 => s13,
      n256 => s14,
      o0_63 => o0_63,
      o64_127 => o64_127,
      o128_191 => o128_191,
      o192_255 => o191_255,
      o256 => o256);
end Behavioral;

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

entity subterranean_duplex is
  port (
    state_0_63: in std_logic_vector(63 downto 0);
    state_128_191: in std_logic_vector(63 downto 0);
    state_192_255: in std_logic_vector(63 downto 0);
    state_64_127: in std_logic_vector(63 downto 0);
    state_256: in std_logic;
    sigma: in std_logic_vector(31 downto 0);
    Dstate_0_63: out std_logic_vector(63 downto 0);
    Dstate_64_127: out std_logic_vector(63 downto 0);
    Dstate_128_191: out std_logic_vector(63 downto 0);
    Dstate_192_255: out std_logic_vector(63 downto 0);
    Dstate_256: out std_logic);
end subterranean_duplex;

architecture Behavioral of subterranean_duplex is
  signal s0: std_logic_vector(63 downto 0);
  signal s1: std_logic_vector(63 downto 0);
  signal s2: std_logic_vector(63 downto 0);
  signal s3: std_logic_vector(63 downto 0);
  signal s4: std_logic;
begin
  gate0: entity work.subterranean_round
    port map (
      n0_63 => state_0_63,
      n64_127 => state_64_127,
      n128_191 => state_128_191,
      n192_255 => state_192_255,
      n256 => state_256,
      o0_63 => s0,
      o64_127 => s1,
      o128_191 => s2,
      o191_255 => s3,
      o256 => s4);
  Dstate_0_63(1) <= (s0(1) XOR sigma(0));
  Dstate_0_63(2) <= (s0(2) XOR sigma(12));
  Dstate_0_63(4) <= (s0(4) XOR sigma(24));
  Dstate_0_63(11) <= (s0(11) XOR sigma(17));
  Dstate_0_63(15) <= (s0(15) XOR sigma(14));
  Dstate_0_63(17) <= (s0(17) XOR sigma(30));
  Dstate_0_63(22) <= (s0(22) XOR sigma(29));
  Dstate_0_63(30) <= (s0(30) XOR sigma(26));
  Dstate_0_63(35) <= (s0(35) XOR sigma(3));
  Dstate_0_63(0) <= s0(0);
  Dstate_0_63(3) <= s0(3);
  Dstate_0_63(10 downto 5) <= s0(10 downto 5);
  Dstate_0_63(14 downto 12) <= s0(14 downto 12);
  Dstate_0_63(16) <= s0(16);
  Dstate_0_63(21 downto 18) <= s0(21 downto 18);
  Dstate_0_63(29 downto 23) <= s0(29 downto 23);
  Dstate_0_63(34 downto 31) <= s0(34 downto 31);
  Dstate_0_63(63 downto 36) <= s0(63 downto 36);
  Dstate_64_127(0) <= (s1(0) XOR sigma(8));
  Dstate_64_127(6) <= (s1(6) XOR sigma(15));
  Dstate_64_127(31) <= (s1(31) XOR sigma(13));
  Dstate_64_127(47) <= (s1(47) XOR sigma(23));
  Dstate_64_127(5 downto 1) <= s1(5 downto 1);
  Dstate_64_127(30 downto 7) <= s1(30 downto 7);
  Dstate_64_127(46 downto 32) <= s1(46 downto 32);
  Dstate_64_127(63 downto 48) <= s1(63 downto 48);
  Dstate_128_191(0) <= (s2(0) XOR sigma(20));
  Dstate_128_191(6) <= (s2(6) XOR sigma(5));
  Dstate_128_191(8) <= (s2(8) XOR sigma(2));
  Dstate_128_191(9) <= (s2(9) XOR sigma(18));
  Dstate_128_191(12) <= (s2(12) XOR sigma(27));
  Dstate_128_191(37) <= (s2(37) XOR sigma(31));
  Dstate_128_191(41) <= (s2(41) XOR sigma(21));
  Dstate_128_191(48) <= (s2(48) XOR sigma(1));
  Dstate_128_191(56) <= (s2(56) XOR sigma(11));
  Dstate_128_191(61) <= (s2(61) XOR sigma(22));
  Dstate_128_191(62) <= (s2(62) XOR sigma(25));
  Dstate_128_191(5 downto 1) <= s2(5 downto 1);
  Dstate_128_191(7) <= s2(7);
  Dstate_128_191(11 downto 10) <= s2(11 downto 10);
  Dstate_128_191(36 downto 13) <= s2(36 downto 13);
  Dstate_128_191(40 downto 38) <= s2(40 downto 38);
  Dstate_128_191(47 downto 42) <= s2(47 downto 42);
  Dstate_128_191(55 downto 49) <= s2(55 downto 49);
  Dstate_128_191(60 downto 57) <= s2(60 downto 57);
  Dstate_128_191(63) <= s2(63);
  Dstate_192_255(5) <= (s3(5) XOR sigma(6));
  Dstate_192_255(19) <= (s3(19) XOR sigma(19));
  Dstate_192_255(21) <= (s3(21) XOR sigma(9));
  Dstate_192_255(31) <= (s3(31) XOR sigma(10));
  Dstate_192_255(33) <= (s3(33) XOR sigma(28));
  Dstate_192_255(42) <= (s3(42) XOR sigma(7));
  Dstate_192_255(49) <= (s3(49) XOR sigma(16));
  Dstate_192_255(57) <= (s3(57) XOR sigma(4));
  Dstate_192_255(4 downto 0) <= s3(4 downto 0);
  Dstate_192_255(18 downto 6) <= s3(18 downto 6);
  Dstate_192_255(20) <= s3(20);
  Dstate_192_255(30 downto 22) <= s3(30 downto 22);
  Dstate_192_255(32) <= s3(32);
  Dstate_192_255(41 downto 34) <= s3(41 downto 34);
  Dstate_192_255(48 downto 43) <= s3(48 downto 43);
  Dstate_192_255(56 downto 50) <= s3(56 downto 50);
  Dstate_192_255(63 downto 58) <= s3(63 downto 58);
  Dstate_256 <= ('1' XOR s4);
end Behavioral;

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

entity main is
  port (
    State_in_0_63: in std_logic_vector(63 downto 0);
    State_in_128_191: in std_logic_vector(63 downto 0);
    State_in_192_255: in std_logic_vector(63 downto 0);
    State_in_64_127: in std_logic_vector(63 downto 0);
    State_in_256: in std_logic;
    value_in_0_63: in std_logic_vector(63 downto 0);
    value_in_64_127: in std_logic_vector(63 downto 0);
    State_0_63: out std_logic_vector(63 downto 0);
    State_64_127: out std_logic_vector(63 downto 0);
    State_128_191: out std_logic_vector(63 downto 0);
    State_192_255: out std_logic_vector(63 downto 0);
    State_256: out std_logic);
end main;

architecture Behavioral of main is
  signal s0: std_logic_vector(31 downto 0);
  signal s1: std_logic_vector(31 downto 0);
  signal s2: std_logic_vector(31 downto 0);
  signal s3: std_logic_vector(31 downto 0);
  signal s4: std_logic_vector(63 downto 0);
  signal s5: std_logic_vector(63 downto 0);
  signal s6: std_logic_vector(63 downto 0);
  signal s7: std_logic_vector(63 downto 0);
  signal s8: std_logic;
  signal s9: std_logic_vector(63 downto 0);
  signal s10: std_logic_vector(63 downto 0);
  signal s11: std_logic_vector(63 downto 0);
  signal s12: std_logic_vector(63 downto 0);
  signal s13: std_logic;
  signal s14: std_logic_vector(63 downto 0);
  signal s15: std_logic_vector(63 downto 0);
  signal s16: std_logic_vector(63 downto 0);
  signal s17: std_logic_vector(63 downto 0);
  signal s18: std_logic;
  signal s19: std_logic_vector(63 downto 0);
begin
  s0 <= value_in_0_63(31 downto 0);
  s1 <= value_in_0_63(63 downto 32);
  s2 <= value_in_64_127(31 downto 0);
  s3 <= value_in_64_127(63 downto 32);
  gate0: entity work.subterranean_duplex
    port map (
      state_0_63 => State_in_0_63,
      state_128_191 => State_in_64_127,
      state_192_255 => State_in_128_191,
      state_64_127 => State_in_192_255,
      state_256 => State_in_256,
      sigma => s0,
      Dstate_0_63 => s4,
      Dstate_64_127 => s5,
      Dstate_128_191 => s6,
      Dstate_192_255 => s7,
      Dstate_256 => s8);
  gate1: entity work.subterranean_duplex
    port map (
      state_0_63 => s4,
      state_128_191 => s5,
      state_192_255 => s6,
      state_64_127 => s7,
      state_256 => s8,
      sigma => s1,
      Dstate_0_63 => s9,
      Dstate_64_127 => s10,
      Dstate_128_191 => s11,
      Dstate_192_255 => s12,
      Dstate_256 => s13);
  gate2: entity work.subterranean_duplex
    port map (
      state_0_63 => s9,
      state_128_191 => s10,
      state_192_255 => s11,
      state_64_127 => s12,
      state_256 => s13,
      sigma => s2,
      Dstate_0_63 => s14,
      Dstate_64_127 => s15,
      Dstate_128_191 => s16,
      Dstate_192_255 => s17,
      Dstate_256 => s18);
  gate3: entity work.subterranean_duplex
    port map (
      state_0_63 => s14,
      state_128_191 => s15,
      state_192_255 => s16,
      state_64_127 => s17,
      state_256 => s18,
      sigma => s3,
      Dstate_0_63 => s19,
      Dstate_64_127 => State_64_127,
      Dstate_128_191 => State_128_191,
      Dstate_192_255 => State_192_255,
      Dstate_256 => State_256);
  State_0_63(0) <= s19(0);
  State_0_63(1) <= ('1' XOR s19(1));
  State_0_63(63 downto 2) <= s19(63 downto 2);
end Behavioral;
